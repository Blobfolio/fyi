/*!
# FYI Message: Utility

This mod contains miscellaneous utility functions for the crate.
*/

use std::slice;



#[must_use]
/// Return escape sequence.
///
/// Convert a `u8` number into its equivalent byte string ANSI sequence.
///
/// It is worth noting that unfortunately BASH, et al, work on a 1-256 scale
/// instead of the more typical 0-255 that Rust's `u8` works on. Rather than
/// complicate the logic or require people to mentally subtract one from the
/// value they want, #256 is unsupported, and #0 is an empty value.
pub fn ansi_code_bold(num: u8) -> &'static [u8] {
	static ANSI: &[&[u8]] = &[&[], &[27, 91, 49, 59, 51, 56, 59, 53, 59, 49, 109], &[27, 91, 49, 59, 51, 56, 59, 53, 59, 50, 109], &[27, 91, 49, 59, 51, 56, 59, 53, 59, 51, 109], &[27, 91, 49, 59, 51, 56, 59, 53, 59, 52, 109], &[27, 91, 49, 59, 51, 56, 59, 53, 59, 53, 109], &[27, 91, 49, 59, 51, 56, 59, 53, 59, 54, 109], &[27, 91, 49, 59, 51, 56, 59, 53, 59, 55, 109], &[27, 91, 49, 59, 51, 56, 59, 53, 59, 56, 109], &[27, 91, 49, 59, 51, 56, 59, 53, 59, 57, 109], &[27, 91, 49, 59, 51, 56, 59, 53, 59, 49, 48, 109], &[27, 91, 49, 59, 51, 56, 59, 53, 59, 49, 49, 109], &[27, 91, 49, 59, 51, 56, 59, 53, 59, 49, 50, 109], &[27, 91, 49, 59, 51, 56, 59, 53, 59, 49, 51, 109], &[27, 91, 49, 59, 51, 56, 59, 53, 59, 49, 52, 109], &[27, 91, 49, 59, 51, 56, 59, 53, 59, 49, 53, 109], &[27, 91, 49, 59, 51, 56, 59, 53, 59, 49, 54, 109], &[27, 91, 49, 59, 51, 56, 59, 53, 59, 49, 55, 109], &[27, 91, 49, 59, 51, 56, 59, 53, 59, 49, 56, 109], &[27, 91, 49, 59, 51, 56, 59, 53, 59, 49, 57, 109], &[27, 91, 49, 59, 51, 56, 59, 53, 59, 50, 48, 109], &[27, 91, 49, 59, 51, 56, 59, 53, 59, 50, 49, 109], &[27, 91, 49, 59, 51, 56, 59, 53, 59, 50, 50, 109], &[27, 91, 49, 59, 51, 56, 59, 53, 59, 50, 51, 109], &[27, 91, 49, 59, 51, 56, 59, 53, 59, 50, 52, 109], &[27, 91, 49, 59, 51, 56, 59, 53, 59, 50, 53, 109], &[27, 91, 49, 59, 51, 56, 59, 53, 59, 50, 54, 109], &[27, 91, 49, 59, 51, 56, 59, 53, 59, 50, 55, 109], &[27, 91, 49, 59, 51, 56, 59, 53, 59, 50, 56, 109], &[27, 91, 49, 59, 51, 56, 59, 53, 59, 50, 57, 109], &[27, 91, 49, 59, 51, 56, 59, 53, 59, 51, 48, 109], &[27, 91, 49, 59, 51, 56, 59, 53, 59, 51, 49, 109], &[27, 91, 49, 59, 51, 56, 59, 53, 59, 51, 50, 109], &[27, 91, 49, 59, 51, 56, 59, 53, 59, 51, 51, 109], &[27, 91, 49, 59, 51, 56, 59, 53, 59, 51, 52, 109], &[27, 91, 49, 59, 51, 56, 59, 53, 59, 51, 53, 109], &[27, 91, 49, 59, 51, 56, 59, 53, 59, 51, 54, 109], &[27, 91, 49, 59, 51, 56, 59, 53, 59, 51, 55, 109], &[27, 91, 49, 59, 51, 56, 59, 53, 59, 51, 56, 109], &[27, 91, 49, 59, 51, 56, 59, 53, 59, 51, 57, 109], &[27, 91, 49, 59, 51, 56, 59, 53, 59, 52, 48, 109], &[27, 91, 49, 59, 51, 56, 59, 53, 59, 52, 49, 109], &[27, 91, 49, 59, 51, 56, 59, 53, 59, 52, 50, 109], &[27, 91, 49, 59, 51, 56, 59, 53, 59, 52, 51, 109], &[27, 91, 49, 59, 51, 56, 59, 53, 59, 52, 52, 109], &[27, 91, 49, 59, 51, 56, 59, 53, 59, 52, 53, 109], &[27, 91, 49, 59, 51, 56, 59, 53, 59, 52, 54, 109], &[27, 91, 49, 59, 51, 56, 59, 53, 59, 52, 55, 109], &[27, 91, 49, 59, 51, 56, 59, 53, 59, 52, 56, 109], &[27, 91, 49, 59, 51, 56, 59, 53, 59, 52, 57, 109], &[27, 91, 49, 59, 51, 56, 59, 53, 59, 53, 48, 109], &[27, 91, 49, 59, 51, 56, 59, 53, 59, 53, 49, 109], &[27, 91, 49, 59, 51, 56, 59, 53, 59, 53, 50, 109], &[27, 91, 49, 59, 51, 56, 59, 53, 59, 53, 51, 109], &[27, 91, 49, 59, 51, 56, 59, 53, 59, 53, 52, 109], &[27, 91, 49, 59, 51, 56, 59, 53, 59, 53, 53, 109], &[27, 91, 49, 59, 51, 56, 59, 53, 59, 53, 54, 109], &[27, 91, 49, 59, 51, 56, 59, 53, 59, 53, 55, 109], &[27, 91, 49, 59, 51, 56, 59, 53, 59, 53, 56, 109], &[27, 91, 49, 59, 51, 56, 59, 53, 59, 53, 57, 109], &[27, 91, 49, 59, 51, 56, 59, 53, 59, 54, 48, 109], &[27, 91, 49, 59, 51, 56, 59, 53, 59, 54, 49, 109], &[27, 91, 49, 59, 51, 56, 59, 53, 59, 54, 50, 109], &[27, 91, 49, 59, 51, 56, 59, 53, 59, 54, 51, 109], &[27, 91, 49, 59, 51, 56, 59, 53, 59, 54, 52, 109], &[27, 91, 49, 59, 51, 56, 59, 53, 59, 54, 53, 109], &[27, 91, 49, 59, 51, 56, 59, 53, 59, 54, 54, 109], &[27, 91, 49, 59, 51, 56, 59, 53, 59, 54, 55, 109], &[27, 91, 49, 59, 51, 56, 59, 53, 59, 54, 56, 109], &[27, 91, 49, 59, 51, 56, 59, 53, 59, 54, 57, 109], &[27, 91, 49, 59, 51, 56, 59, 53, 59, 55, 48, 109], &[27, 91, 49, 59, 51, 56, 59, 53, 59, 55, 49, 109], &[27, 91, 49, 59, 51, 56, 59, 53, 59, 55, 50, 109], &[27, 91, 49, 59, 51, 56, 59, 53, 59, 55, 51, 109], &[27, 91, 49, 59, 51, 56, 59, 53, 59, 55, 52, 109], &[27, 91, 49, 59, 51, 56, 59, 53, 59, 55, 53, 109], &[27, 91, 49, 59, 51, 56, 59, 53, 59, 55, 54, 109], &[27, 91, 49, 59, 51, 56, 59, 53, 59, 55, 55, 109], &[27, 91, 49, 59, 51, 56, 59, 53, 59, 55, 56, 109], &[27, 91, 49, 59, 51, 56, 59, 53, 59, 55, 57, 109], &[27, 91, 49, 59, 51, 56, 59, 53, 59, 56, 48, 109], &[27, 91, 49, 59, 51, 56, 59, 53, 59, 56, 49, 109], &[27, 91, 49, 59, 51, 56, 59, 53, 59, 56, 50, 109], &[27, 91, 49, 59, 51, 56, 59, 53, 59, 56, 51, 109], &[27, 91, 49, 59, 51, 56, 59, 53, 59, 56, 52, 109], &[27, 91, 49, 59, 51, 56, 59, 53, 59, 56, 53, 109], &[27, 91, 49, 59, 51, 56, 59, 53, 59, 56, 54, 109], &[27, 91, 49, 59, 51, 56, 59, 53, 59, 56, 55, 109], &[27, 91, 49, 59, 51, 56, 59, 53, 59, 56, 56, 109], &[27, 91, 49, 59, 51, 56, 59, 53, 59, 56, 57, 109], &[27, 91, 49, 59, 51, 56, 59, 53, 59, 57, 48, 109], &[27, 91, 49, 59, 51, 56, 59, 53, 59, 57, 49, 109], &[27, 91, 49, 59, 51, 56, 59, 53, 59, 57, 50, 109], &[27, 91, 49, 59, 51, 56, 59, 53, 59, 57, 51, 109], &[27, 91, 49, 59, 51, 56, 59, 53, 59, 57, 52, 109], &[27, 91, 49, 59, 51, 56, 59, 53, 59, 57, 53, 109], &[27, 91, 49, 59, 51, 56, 59, 53, 59, 57, 54, 109], &[27, 91, 49, 59, 51, 56, 59, 53, 59, 57, 55, 109], &[27, 91, 49, 59, 51, 56, 59, 53, 59, 57, 56, 109], &[27, 91, 49, 59, 51, 56, 59, 53, 59, 57, 57, 109], &[27, 91, 49, 59, 51, 56, 59, 53, 59, 49, 48, 48, 109], &[27, 91, 49, 59, 51, 56, 59, 53, 59, 49, 48, 49, 109], &[27, 91, 49, 59, 51, 56, 59, 53, 59, 49, 48, 50, 109], &[27, 91, 49, 59, 51, 56, 59, 53, 59, 49, 48, 51, 109], &[27, 91, 49, 59, 51, 56, 59, 53, 59, 49, 48, 52, 109], &[27, 91, 49, 59, 51, 56, 59, 53, 59, 49, 48, 53, 109], &[27, 91, 49, 59, 51, 56, 59, 53, 59, 49, 48, 54, 109], &[27, 91, 49, 59, 51, 56, 59, 53, 59, 49, 48, 55, 109], &[27, 91, 49, 59, 51, 56, 59, 53, 59, 49, 48, 56, 109], &[27, 91, 49, 59, 51, 56, 59, 53, 59, 49, 48, 57, 109], &[27, 91, 49, 59, 51, 56, 59, 53, 59, 49, 49, 48, 109], &[27, 91, 49, 59, 51, 56, 59, 53, 59, 49, 49, 49, 109], &[27, 91, 49, 59, 51, 56, 59, 53, 59, 49, 49, 50, 109], &[27, 91, 49, 59, 51, 56, 59, 53, 59, 49, 49, 51, 109], &[27, 91, 49, 59, 51, 56, 59, 53, 59, 49, 49, 52, 109], &[27, 91, 49, 59, 51, 56, 59, 53, 59, 49, 49, 53, 109], &[27, 91, 49, 59, 51, 56, 59, 53, 59, 49, 49, 54, 109], &[27, 91, 49, 59, 51, 56, 59, 53, 59, 49, 49, 55, 109], &[27, 91, 49, 59, 51, 56, 59, 53, 59, 49, 49, 56, 109], &[27, 91, 49, 59, 51, 56, 59, 53, 59, 49, 49, 57, 109], &[27, 91, 49, 59, 51, 56, 59, 53, 59, 49, 50, 48, 109], &[27, 91, 49, 59, 51, 56, 59, 53, 59, 49, 50, 49, 109], &[27, 91, 49, 59, 51, 56, 59, 53, 59, 49, 50, 50, 109], &[27, 91, 49, 59, 51, 56, 59, 53, 59, 49, 50, 51, 109], &[27, 91, 49, 59, 51, 56, 59, 53, 59, 49, 50, 52, 109], &[27, 91, 49, 59, 51, 56, 59, 53, 59, 49, 50, 53, 109], &[27, 91, 49, 59, 51, 56, 59, 53, 59, 49, 50, 54, 109], &[27, 91, 49, 59, 51, 56, 59, 53, 59, 49, 50, 55, 109], &[27, 91, 49, 59, 51, 56, 59, 53, 59, 49, 50, 56, 109], &[27, 91, 49, 59, 51, 56, 59, 53, 59, 49, 50, 57, 109], &[27, 91, 49, 59, 51, 56, 59, 53, 59, 49, 51, 48, 109], &[27, 91, 49, 59, 51, 56, 59, 53, 59, 49, 51, 49, 109], &[27, 91, 49, 59, 51, 56, 59, 53, 59, 49, 51, 50, 109], &[27, 91, 49, 59, 51, 56, 59, 53, 59, 49, 51, 51, 109], &[27, 91, 49, 59, 51, 56, 59, 53, 59, 49, 51, 52, 109], &[27, 91, 49, 59, 51, 56, 59, 53, 59, 49, 51, 53, 109], &[27, 91, 49, 59, 51, 56, 59, 53, 59, 49, 51, 54, 109], &[27, 91, 49, 59, 51, 56, 59, 53, 59, 49, 51, 55, 109], &[27, 91, 49, 59, 51, 56, 59, 53, 59, 49, 51, 56, 109], &[27, 91, 49, 59, 51, 56, 59, 53, 59, 49, 51, 57, 109], &[27, 91, 49, 59, 51, 56, 59, 53, 59, 49, 52, 48, 109], &[27, 91, 49, 59, 51, 56, 59, 53, 59, 49, 52, 49, 109], &[27, 91, 49, 59, 51, 56, 59, 53, 59, 49, 52, 50, 109], &[27, 91, 49, 59, 51, 56, 59, 53, 59, 49, 52, 51, 109], &[27, 91, 49, 59, 51, 56, 59, 53, 59, 49, 52, 52, 109], &[27, 91, 49, 59, 51, 56, 59, 53, 59, 49, 52, 53, 109], &[27, 91, 49, 59, 51, 56, 59, 53, 59, 49, 52, 54, 109], &[27, 91, 49, 59, 51, 56, 59, 53, 59, 49, 52, 55, 109], &[27, 91, 49, 59, 51, 56, 59, 53, 59, 49, 52, 56, 109], &[27, 91, 49, 59, 51, 56, 59, 53, 59, 49, 52, 57, 109], &[27, 91, 49, 59, 51, 56, 59, 53, 59, 49, 53, 48, 109], &[27, 91, 49, 59, 51, 56, 59, 53, 59, 49, 53, 49, 109], &[27, 91, 49, 59, 51, 56, 59, 53, 59, 49, 53, 50, 109], &[27, 91, 49, 59, 51, 56, 59, 53, 59, 49, 53, 51, 109], &[27, 91, 49, 59, 51, 56, 59, 53, 59, 49, 53, 52, 109], &[27, 91, 49, 59, 51, 56, 59, 53, 59, 49, 53, 53, 109], &[27, 91, 49, 59, 51, 56, 59, 53, 59, 49, 53, 54, 109], &[27, 91, 49, 59, 51, 56, 59, 53, 59, 49, 53, 55, 109], &[27, 91, 49, 59, 51, 56, 59, 53, 59, 49, 53, 56, 109], &[27, 91, 49, 59, 51, 56, 59, 53, 59, 49, 53, 57, 109], &[27, 91, 49, 59, 51, 56, 59, 53, 59, 49, 54, 48, 109], &[27, 91, 49, 59, 51, 56, 59, 53, 59, 49, 54, 49, 109], &[27, 91, 49, 59, 51, 56, 59, 53, 59, 49, 54, 50, 109], &[27, 91, 49, 59, 51, 56, 59, 53, 59, 49, 54, 51, 109], &[27, 91, 49, 59, 51, 56, 59, 53, 59, 49, 54, 52, 109], &[27, 91, 49, 59, 51, 56, 59, 53, 59, 49, 54, 53, 109], &[27, 91, 49, 59, 51, 56, 59, 53, 59, 49, 54, 54, 109], &[27, 91, 49, 59, 51, 56, 59, 53, 59, 49, 54, 55, 109], &[27, 91, 49, 59, 51, 56, 59, 53, 59, 49, 54, 56, 109], &[27, 91, 49, 59, 51, 56, 59, 53, 59, 49, 54, 57, 109], &[27, 91, 49, 59, 51, 56, 59, 53, 59, 49, 55, 48, 109], &[27, 91, 49, 59, 51, 56, 59, 53, 59, 49, 55, 49, 109], &[27, 91, 49, 59, 51, 56, 59, 53, 59, 49, 55, 50, 109], &[27, 91, 49, 59, 51, 56, 59, 53, 59, 49, 55, 51, 109], &[27, 91, 49, 59, 51, 56, 59, 53, 59, 49, 55, 52, 109], &[27, 91, 49, 59, 51, 56, 59, 53, 59, 49, 55, 53, 109], &[27, 91, 49, 59, 51, 56, 59, 53, 59, 49, 55, 54, 109], &[27, 91, 49, 59, 51, 56, 59, 53, 59, 49, 55, 55, 109], &[27, 91, 49, 59, 51, 56, 59, 53, 59, 49, 55, 56, 109], &[27, 91, 49, 59, 51, 56, 59, 53, 59, 49, 55, 57, 109], &[27, 91, 49, 59, 51, 56, 59, 53, 59, 49, 56, 48, 109], &[27, 91, 49, 59, 51, 56, 59, 53, 59, 49, 56, 49, 109], &[27, 91, 49, 59, 51, 56, 59, 53, 59, 49, 56, 50, 109], &[27, 91, 49, 59, 51, 56, 59, 53, 59, 49, 56, 51, 109], &[27, 91, 49, 59, 51, 56, 59, 53, 59, 49, 56, 52, 109], &[27, 91, 49, 59, 51, 56, 59, 53, 59, 49, 56, 53, 109], &[27, 91, 49, 59, 51, 56, 59, 53, 59, 49, 56, 54, 109], &[27, 91, 49, 59, 51, 56, 59, 53, 59, 49, 56, 55, 109], &[27, 91, 49, 59, 51, 56, 59, 53, 59, 49, 56, 56, 109], &[27, 91, 49, 59, 51, 56, 59, 53, 59, 49, 56, 57, 109], &[27, 91, 49, 59, 51, 56, 59, 53, 59, 49, 57, 48, 109], &[27, 91, 49, 59, 51, 56, 59, 53, 59, 49, 57, 49, 109], &[27, 91, 49, 59, 51, 56, 59, 53, 59, 49, 57, 50, 109], &[27, 91, 49, 59, 51, 56, 59, 53, 59, 49, 57, 51, 109], &[27, 91, 49, 59, 51, 56, 59, 53, 59, 49, 57, 52, 109], &[27, 91, 49, 59, 51, 56, 59, 53, 59, 49, 57, 53, 109], &[27, 91, 49, 59, 51, 56, 59, 53, 59, 49, 57, 54, 109], &[27, 91, 49, 59, 51, 56, 59, 53, 59, 49, 57, 55, 109], &[27, 91, 49, 59, 51, 56, 59, 53, 59, 49, 57, 56, 109], &[27, 91, 49, 59, 51, 56, 59, 53, 59, 49, 57, 57, 109], &[27, 91, 49, 59, 51, 56, 59, 53, 59, 50, 48, 48, 109], &[27, 91, 49, 59, 51, 56, 59, 53, 59, 50, 48, 49, 109], &[27, 91, 49, 59, 51, 56, 59, 53, 59, 50, 48, 50, 109], &[27, 91, 49, 59, 51, 56, 59, 53, 59, 50, 48, 51, 109], &[27, 91, 49, 59, 51, 56, 59, 53, 59, 50, 48, 52, 109], &[27, 91, 49, 59, 51, 56, 59, 53, 59, 50, 48, 53, 109], &[27, 91, 49, 59, 51, 56, 59, 53, 59, 50, 48, 54, 109], &[27, 91, 49, 59, 51, 56, 59, 53, 59, 50, 48, 55, 109], &[27, 91, 49, 59, 51, 56, 59, 53, 59, 50, 48, 56, 109], &[27, 91, 49, 59, 51, 56, 59, 53, 59, 50, 48, 57, 109], &[27, 91, 49, 59, 51, 56, 59, 53, 59, 50, 49, 48, 109], &[27, 91, 49, 59, 51, 56, 59, 53, 59, 50, 49, 49, 109], &[27, 91, 49, 59, 51, 56, 59, 53, 59, 50, 49, 50, 109], &[27, 91, 49, 59, 51, 56, 59, 53, 59, 50, 49, 51, 109], &[27, 91, 49, 59, 51, 56, 59, 53, 59, 50, 49, 52, 109], &[27, 91, 49, 59, 51, 56, 59, 53, 59, 50, 49, 53, 109], &[27, 91, 49, 59, 51, 56, 59, 53, 59, 50, 49, 54, 109], &[27, 91, 49, 59, 51, 56, 59, 53, 59, 50, 49, 55, 109], &[27, 91, 49, 59, 51, 56, 59, 53, 59, 50, 49, 56, 109], &[27, 91, 49, 59, 51, 56, 59, 53, 59, 50, 49, 57, 109], &[27, 91, 49, 59, 51, 56, 59, 53, 59, 50, 50, 48, 109], &[27, 91, 49, 59, 51, 56, 59, 53, 59, 50, 50, 49, 109], &[27, 91, 49, 59, 51, 56, 59, 53, 59, 50, 50, 50, 109], &[27, 91, 49, 59, 51, 56, 59, 53, 59, 50, 50, 51, 109], &[27, 91, 49, 59, 51, 56, 59, 53, 59, 50, 50, 52, 109], &[27, 91, 49, 59, 51, 56, 59, 53, 59, 50, 50, 53, 109], &[27, 91, 49, 59, 51, 56, 59, 53, 59, 50, 50, 54, 109], &[27, 91, 49, 59, 51, 56, 59, 53, 59, 50, 50, 55, 109], &[27, 91, 49, 59, 51, 56, 59, 53, 59, 50, 50, 56, 109], &[27, 91, 49, 59, 51, 56, 59, 53, 59, 50, 50, 57, 109], &[27, 91, 49, 59, 51, 56, 59, 53, 59, 50, 51, 48, 109], &[27, 91, 49, 59, 51, 56, 59, 53, 59, 50, 51, 49, 109], &[27, 91, 49, 59, 51, 56, 59, 53, 59, 50, 51, 50, 109], &[27, 91, 49, 59, 51, 56, 59, 53, 59, 50, 51, 51, 109], &[27, 91, 49, 59, 51, 56, 59, 53, 59, 50, 51, 52, 109], &[27, 91, 49, 59, 51, 56, 59, 53, 59, 50, 51, 53, 109], &[27, 91, 49, 59, 51, 56, 59, 53, 59, 50, 51, 54, 109], &[27, 91, 49, 59, 51, 56, 59, 53, 59, 50, 51, 55, 109], &[27, 91, 49, 59, 51, 56, 59, 53, 59, 50, 51, 56, 109], &[27, 91, 49, 59, 51, 56, 59, 53, 59, 50, 51, 57, 109], &[27, 91, 49, 59, 51, 56, 59, 53, 59, 50, 52, 48, 109], &[27, 91, 49, 59, 51, 56, 59, 53, 59, 50, 52, 49, 109], &[27, 91, 49, 59, 51, 56, 59, 53, 59, 50, 52, 50, 109], &[27, 91, 49, 59, 51, 56, 59, 53, 59, 50, 52, 51, 109], &[27, 91, 49, 59, 51, 56, 59, 53, 59, 50, 52, 52, 109], &[27, 91, 49, 59, 51, 56, 59, 53, 59, 50, 52, 53, 109], &[27, 91, 49, 59, 51, 56, 59, 53, 59, 50, 52, 54, 109], &[27, 91, 49, 59, 51, 56, 59, 53, 59, 50, 52, 55, 109], &[27, 91, 49, 59, 51, 56, 59, 53, 59, 50, 52, 56, 109], &[27, 91, 49, 59, 51, 56, 59, 53, 59, 50, 52, 57, 109], &[27, 91, 49, 59, 51, 56, 59, 53, 59, 50, 53, 48, 109], &[27, 91, 49, 59, 51, 56, 59, 53, 59, 50, 53, 49, 109], &[27, 91, 49, 59, 51, 56, 59, 53, 59, 50, 53, 50, 109], &[27, 91, 49, 59, 51, 56, 59, 53, 59, 50, 53, 51, 109], &[27, 91, 49, 59, 51, 56, 59, 53, 59, 50, 53, 52, 109], &[27, 91, 49, 59, 51, 56, 59, 53, 59, 50, 53, 53, 109]];
	ANSI[num as usize]
}

#[must_use]
/// Time Number to String.
///
/// This is a simple conversion table for turning `u32` representations of
/// numbers 0–59 into double-digit strings like "00" and "59". It is faster
/// having these ready than trying to `itoa::write` them on-the-fly.
///
/// Out of range always comes back as "59".
///
/// For reference, the reverse (u8+u8=u16) = ((left as u16) << 8) | right as u16.
pub fn time_format_dd(num: u32) -> &'static [u8] {
	#[cfg(target_endian = "big")] static TIME: &[u16] = &[12336, 12337, 12338, 12339, 12340, 12341, 12342, 12343, 12344, 12345, 12592, 12593, 12594, 12595, 12596, 12597, 12598, 12599, 12600, 12601, 12848, 12849, 12850, 12851, 12852, 12853, 12854, 12855, 12856, 12857, 13104, 13105, 13106, 13107, 13108, 13109, 13110, 13111, 13112, 13113, 13360, 13361, 13362, 13363, 13364, 13365, 13366, 13367, 13368, 13369, 13616, 13617, 13618, 13619, 13620, 13621, 13622, 13623, 13624, 13625];
	#[cfg(target_endian = "little")] static TIME: &[u16] = &[12336, 12592, 12848, 13104, 13360, 13616, 13872, 14128, 14384, 14640, 12337, 12593, 12849, 13105, 13361, 13617, 13873, 14129, 14385, 14641, 12338, 12594, 12850, 13106, 13362, 13618, 13874, 14130, 14386, 14642, 12339, 12595, 12851, 13107, 13363, 13619, 13875, 14131, 14387, 14643, 12340, 12596, 12852, 13108, 13364, 13620, 13876, 14132, 14388, 14644, 12341, 12597, 12853, 13109, 13365, 13621, 13877, 14133, 14389, 14645];

	let idx: usize = usize::min(59, num as usize);
	unsafe { slice::from_raw_parts(TIME.as_ptr().add(idx) as *const u8, 2) }
}

#[must_use]
/// Whitespace maker.
///
/// This method borrows whitespace from a static reference, useful for
/// quickly padding strings, etc.
pub fn whitespace(num: usize) -> &'static [u8] {
	static WHITES: &[u8] = &[32; 255];
	&WHITES[0..usize::min(255, num)]
}



#[cfg(test)]
mod tests {
	use super::*;

	#[test]
	fn t_ansi_code_bold() {
		_ansi_code_bold(0, "");
		_ansi_code_bold(1, "\x1B[1;38;5;1m");
		_ansi_code_bold(9, "\x1B[1;38;5;9m");
		_ansi_code_bold(50, "\x1B[1;38;5;50m");
		_ansi_code_bold(100, "\x1B[1;38;5;100m");
	}

	fn _ansi_code_bold(num: u8, expected: &str) {
		assert_eq!(
			ansi_code_bold(num),
			expected.as_bytes(),
			"{} should be equivalent to {:?}",
			num,
			expected.as_bytes()
		);
	}

	#[test]
	fn t_time_format_dd() {
		_time_format_dd(0, "00");
		_time_format_dd(1, "01");
		_time_format_dd(9, "09");
		_time_format_dd(50, "50");
		_time_format_dd(60, "59");
	}

	fn _time_format_dd(num: u32, expected: &str) {
		assert_eq!(
			time_format_dd(num),
			expected.as_bytes(),
			"{} should be equivalent to {:?}",
			num,
			expected
		);
	}

	#[test]
	fn t_whitespace() {
		assert_eq!(whitespace(0), b"");
		assert_eq!(whitespace(5), b"     ");
		assert_eq!(whitespace(10), b"          ");
	}
}
